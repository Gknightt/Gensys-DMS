"""add on casecase=delete for tags association table

Revision ID: bafd773c8533
Revises: 88b6b2d497ea
Create Date: 2025-02-01 08:59:18.660765

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "bafd773c8533"
down_revision: Union[str, None] = "88b6b2d497ea"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    constraints = [c["name"] for c in inspector.get_foreign_keys("nodes_tags")]

    if "nodes_tags_tag_id_fkey" in constraints:
        with op.batch_alter_table("nodes_tags") as batch_op:
            batch_op.drop_constraint("nodes_tags_tag_id_fkey", type_="foreignkey")

    with op.batch_alter_table("nodes_tags") as batch_op:
        batch_op.create_foreign_key(
            "nodes_tags_tag_id_fkey", "tags", ["tag_id"], ["id"], ondelete="CASCADE"
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("nodes_tags") as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "nodes_tags_tag_id_fkey", "tags", ["tag_id"], ["id"]
        )
    # ### end Alembic commands ###
