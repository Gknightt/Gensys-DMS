"""add ondelete cascade to nodes tags

Revision ID: 88b6b2d497ea
Revises: f0e0da122a9a
Create Date: 2025-02-01 08:20:24.361716

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "88b6b2d497ea"
down_revision: Union[str, None] = "f0e0da122a9a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("nodes") as batch_op:
        batch_op.create_foreign_key(
            "nodes_user_id_fkey",
            "users",
            ["user_id"],
            ["id"],
            ondelete="CASCADE",
            use_alter=True,
        )
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    constraints = [c["name"] for c in inspector.get_foreign_keys("nodes_tags")]
    if "nodes_tags_node_id_fkey" in constraints:
        with op.batch_alter_table("nodes_tags") as batch_op:
            batch_op.drop_constraint("nodes_tags_node_id_fkey", type_="foreignkey")

    with op.batch_alter_table("nodes_tags") as batch_op:
        batch_op.create_foreign_key(
            "nodes_tags_node_id_fkey", "nodes", ["node_id"], ["id"], ondelete="CASCADE"
        )

    with op.batch_alter_table("tags") as batch_op:
        batch_op.create_foreign_key(
            "tag_user_id_fk", "users", ["user_id"], ["id"], use_alter=True
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("tags") as batch_op:
        batch_op.drop_constraint("tag_user_id_fk", type_="foreignkey")

    with op.batch_alter_table("nodes_tags") as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "nodes_tags_node_id_fkey", "nodes", ["node_id"], ["id"]
        )

    with op.batch_alter_table("nodes") as batch_op:
        batch_op.drop_constraint("nodes_user_id_fkey", type_="foreignkey")
    # ### end Alembic commands ###
